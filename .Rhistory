pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 100), cut(y, breaks = 100), fill = z))+
geom_tile()+
labs(
x =  paste("habitat quality"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
}
i_comb2 = paste0("b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 100), cut(y, breaks = 100), fill = z))+
geom_tile()+
labs(
x =  paste("habitat quality"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
names(res)
i_comb2 = paste0("distP+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 100), cut(y, breaks = 100), fill = z))+
geom_tile()+
labs(
x =  paste("habitat quality"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b2_recr"
i_comb2 = paste0("distP+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 100), cut(y, breaks = 100), fill = z))+
geom_tile()+
labs(
x =  paste("habitat quality"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 10), cut(y, breaks = 10), fill = z))+
geom_tile()+
labs(
x =  paste("habitat quality"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 10), cut(y, breaks = 10), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb2 = paste0("distP+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 10), cut(y, breaks = 10), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_recr"
i_comb2 = paste0("distP+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 10), cut(y, breaks = 10), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
names(res)
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 10), cut(y, breaks = 10), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_g"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 10), cut(y, breaks = 10), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 50), cut(y, breaks = 50), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_recr"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 50), cut(y, breaks = 50), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b2_recr"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b2_g"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_g"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,2], z = log((pred[,2]-obs[,2])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_recr"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b2_recr"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_g"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_recr"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_recr"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
i_comb = "b1_g"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = ((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
names(res)
res <- readRDS("results/results_10000.RDS")
str(res)
library(ggplot2)
library(data.table)
library(wesanderson)
names(res)
c("distP+b2_recr")
data.table(res$`distP+b1_recr`$results$pred)
i_comb = "b2_recr"
par(mfrow = c(2,2),pty="s")
for(i_comb in c("b1_recr", "b2_recr", "b1_g", "b2_g")){
pred = res[[i_comb]]$results$pred
obs = res[[i_comb]]$results$obs
p_range = range(c(pred,obs))
plot(x = pred, y = obs,
xlab = paste("observed",i_comb),
ylab = paste("predicted",i_comb),
asp = 1, xlim = p_range, ylim = p_range
)
abline(0,1)
}
par(mfrow = c(2,2),pty="s")
for(i_comb in c("b1_recr", "b2_recr", "b1_g", "b2_g")){
i_comb = "b1_g"
i_comb2 = paste0("distP+b0_e+",i_comb)
pred = res[[i_comb2]]$results$pred
obs = res[[i_comb2]]$results$obs
pal <- wes_palette("Zissou1", 100, type = "continuous")
ggplot(
data = data.frame(x = obs[,1], y = obs[,3], z = log((pred[,3]-obs[,3])^2)),
aes(cut(x, breaks = 20), cut(y, breaks = 20), fill = z))+
geom_tile()+
labs(
x =  paste("disturbance"),
y = paste("observed",i_comb)
)+
scale_fill_gradientn(colours = pal)
}
ggplot(
data = data.frame(
pred = res[[i_comb]]$results$pred,
obs = res[[i_comb]]$results$obs
), aes(x = obs, y = pred))+
geom_point()
dt <- data.table(
obs = res$`distP+b1_recr`$results$pred[,1]
)
plot(tail(res$distP$data$distP,3000), res$distP$results$obs)
ggplot(
data = data.frame(
distP_obs = res$distP$results$obs,
recr_pred = res$b2_recr$results$pred,
recr_obs = res$b2_recr$results$obs
), aes(cut(recr_obs, breaks = 10), cut(distP_obs, breaks = 10), fill = (recr_pred-recr_obs)^2))+
geom_tile()
ggplot(
data = data.frame(
distP_obs = res$b2_recr$results$obs,
recr_pred = res$b2_recr$results$pred,
recr_obs = res$b2_recr$results$obs
), aes(cut(recr_obs, breaks = 10), cut(distP_obs, breaks = 10), fill = (recr_pred-recr_obs)^2))+
geom_tile()
ggplot(
data = data.frame(
distP_obs = res$distP$results$obs,
recr_pred = res$b2_recr$results$pred,
recr_obs = res$b2_recr$results$obs
), aes(cut(recr_obs, breaks = 10), cut(distP_obs, breaks = 10), fill = (recr_pred-recr_obs)^2))+
geom_tile()
ggplot(
data = data.frame(
distP_obs = res$distP$results$obs,
recr_pred = res$b2_recr$results$pred,
recr_obs = res$b2_recr$results$obs
), aes(cut(recr_obs, breaks = 100), cut(distP_obs, breaks = 100), fill = (recr_pred-recr_obs)^2))+
geom_tile()
library(parallel)
library(Rcpp)
library(BayesianTools)
sourceCpp("library/beverton-hold.cpp")
data =
lapply(1:3000, function(i) {
distP = runif(1, 0, 0.2)
b0_e = runif(1, 0, 1.0)
b1_recr = runif(1, 0, 50)
b2_recr = runif(1, -5, 0.0)
b1_g = runif(1, 0, 1.0)
b2_g = runif(1, -5, 0)
data_tmp =  beverton_holt(N0 = 10,
timesteps = 510,
spinup = 10L,
b0_e = b0_e,
b1_e = 0.0,
b0_k = 100,
b1_k = 4.9,
b1_g = b1_g,
b2_g = b2_g,
b0_r = 30,
b1_recr = b1_recr,
b2_recr = b2_recr,
distP = distP,
Nrep = 1,
opt_x1 = 250)
N = data_tmp$N
E = data_tmp$x1
N[is.na(N)] = 0
return(c(distP,
b0_e,
b1_recr,
b2_recr,
b1_g,
b2_g,
N
))
})
data = (abind::abind(data, along = 0L))
cl = makeCluster(60L)
parallel::clusterExport(cl, varlist = ls(envir = .GlobalEnv))
clusterEvalQ(cl, {library(BayesianTools);Rcpp::sourceCpp("library/beverton-hold.cpp")})
library(parallel)
library(Rcpp)
library(BayesianTools)
sourceCpp("library/beverton-hold.cpp")
data =
lapply(1:3000, function(i) {
distP = runif(1, 0, 0.2)
b0_e = runif(1, 0, 1.0)
b1_recr = runif(1, 0, 50)
b2_recr = runif(1, -5, 0.0)
b1_g = runif(1, 0, 1.0)
b2_g = runif(1, -5, 0)
data_tmp =  beverton_holt(N0 = 10,
timesteps = 510,
spinup = 10L,
b0_e = b0_e,
b1_e = 0.0,
b0_k = 100,
b1_k = 4.9,
b1_g = b1_g,
b2_g = b2_g,
b0_r = 30,
b1_recr = b1_recr,
b2_recr = b2_recr,
distP = distP,
Nrep = 1,
opt_x1 = 250)
N = data_tmp$N
E = data_tmp$x1
N[is.na(N)] = 0
return(c(distP,
b0_e,
b1_recr,
b2_recr,
b1_g,
b2_g,
N
))
})
data = (abind::abind(data, along = 0L))
cl = makeCluster(60L)
parallel::clusterExport(cl, varlist = ls(envir = .GlobalEnv))
clusterEvalQ(cl, {library(BayesianTools);Rcpp::sourceCpp("library/beverton-hold.cpp")})
results = parLapply(cl, 1:nrow(data), function(KK) {
obs = data[KK, -(1:6)]
true_pars = data[KK, 1:6]
logLik = function(par) {
ll =
replicate(50, {
data_tmp =  beverton_holt(N0 = 10,
timesteps = 510,
spinup = 10L,
b0_e = par[2],
b1_e = 0.0,
b0_k = 100,
b1_k = 4.9,
b1_g = par[5],
b2_g = par[6],
b0_r = 30,
b1_recr = par[3],
b2_recr = par[4],
distP = par[1],
Nrep = 1,
opt_x1 = 250)$N
sum((data_tmp-obs)**2)/500
})
return(-mean(ll))
}
bs = createBayesianSetup(logLik, prior = createUniformPrior(c(0,0,0,-5,0,-5), c(0.2, 1.0, 50, 0.0, 1.0, 0)))
res = runMCMC(bs, settings = list(iterations = 10000))
inferred = MAP(res, start = 2000)$par
return(cbind(inferred, true_pars))
})
